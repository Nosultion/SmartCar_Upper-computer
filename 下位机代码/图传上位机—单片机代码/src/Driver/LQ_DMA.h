/*LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
 【平    台】北京龙邱智能科技TC264DA核心板
 【编    写】ZYF/chiusir
 【E-mail  】chiusir@163.com
 【软件版本】V1.1 版权所有，单位使用请先联系授权
 【最后更新】2020年10月28日
 【相关信息参考下列地址】
 【网    站】http://www.lqist.cn
 【淘宝店铺】http://longqiu.taobao.com
 ------------------------------------------------
 【dev.env.】AURIX Development Studio1.2.2及以上版本
 【Target 】 TC264DA/TC264D
 【Crystal】 20.000Mhz
 【SYS PLL】 200MHz
 ________________________________________________________________
 基于iLLD_1_0_1_11_0底层程序,

 使用例程的时候，建议采用没有空格的英文路径，
 除了CIF为TC264DA独有外，其它的代码兼容TC264D
 本库默认初始化了EMEM：512K，如果用户使用TC264D，注释掉EMEM_InitConfig()初始化函数。
 工程下\Libraries\iLLD\TC26B\Tricore\Cpu\CStart\IfxCpu_CStart0.c第164行左右。
 QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ*/

#ifndef _LQ_DMA_H_
#define _LQ_DMA_H_

#include "../../Libraries/iLLD/TC26B/Tricore/Cpu/Std/IfxCpu.h"
#include "../../Libraries/iLLD/TC26B/Tricore/Dma/Dma/IfxDma_Dma.h"
#include "../../Libraries/iLLD/TC26B/Tricore/Dma/Std/IfxDma.h"
#include "../../Libraries/Infra/Platform/Tricore/Compilers/CompilerTasking.h"
#include "../../Libraries/Infra/Sfr/TC26B/_Reg/IfxDma_reg.h"
#include "../../Libraries/Infra/Sfr/TC26B/_Reg/IfxDma_regdef.h"
#include "../APP/LQ_CAMERA.h"

/** DMA中断服务函数优先级   范围：1-255   数字越大 优先级越高  注意优先级不要重复 */
#define  DMA_PRIORITY    255

/** DMA中断服务函数优先级 中断归哪个内核管理？ 范围：0：CPU0   1：CPU1   3：DMA*/
#define  DMA_VECTABNUM    0

/**
 * 摄像头 DMA 配置结构体
 */
typedef struct
{
    Ifx_DMA_CH linkedList[2];               //总是报错，去掉了IFX_ALIGN(256)，实测没有影响
    //IFX_ALIGN(256) Ifx_DMA_CH linkedList[2]; //链表存储。必须与256位地址对齐，否则DMA无法读取
    IfxDma_Dma_Channel chn;                 // Dma channel handle
} Dma_Camera_t;

/** 摄像头 数据采集完成标志位 */
extern unsigned char Camera_Flag;

/**
 * 摄像头 DMA 配置结构体
 */
extern Dma_Camera_t g_DmaCameraLinkedList;

/* DMA 中断服务函数  */
void DMA_IRQHandler (void);

/*!
 * @brief    摄像头DMA传输初始化
 *
 * @param    srcStartAddr   ：源地址 IO地址
 * @param    dstStartAddr   ：目的地址 摄像头数据缓冲区
 * @param    channel        ：DMA传输通道 0-47      注意 DMA传输通道需要和PIX像素中断优先级保持一致
 *
 * @return   无
 *
 * @note     注意 DMA传输通道需要和PIX像素中断优先级保持一致    一幅图需要进行两次DMA传输，因此会触发两次DMA中断
 *
 * @see      DMA_CameraInitConfig((unsigned long)(&MODULE_P02.IN.U), (unsigned long)Image_Data, PIN_INT2_PRIORITY);
 *
 * @date     2019/10/22 星期二
 */
void DMA_CameraInitConfig (unsigned long srcStartAddr, unsigned long dstStartAddr, unsigned long channel);

/*!
 * @brief    摄像头DMA传输开启
 *
 * @param    channel  : DMA通道
 *
 * @return   无
 *
 * @note     注意   在场中断中再次开启DMA传输
 *
 * @see      DMA_CameraIRQ(PIN_INT2_PRIORITY);
 *
 * @date     2020/4/8
 */
IFX_INLINE void DMA_CameraStart (unsigned long channel);

/*!
 * @brief    DMA传输停止
 *
 * @param    channel  : DMA通道
 *
 * @return   无
 *
 * @note     注意   在场中断中再次开启DMA传输
 *
 * @see      DMA_CameraStop(PIN_INT2_PRIORITY);
 *
 * @date     2020/4/8
 */
IFX_INLINE void DMA_CameraStop (unsigned long channel);

/*!
 * @brief    摄像头DMA传输中断处理函数
 *
 * @param    channel  : DMA通道
 *
 * @return   无
 *
 * @note     注意    一幅图需要进行两次DMA传输，因此会触发两次DMA中断
 *
 * @see      DMA_CameraIRQ(PIN_INT2_PRIORITY);
 *
 * @date     2020/4/8
 */
IFX_INLINE void DMA_CameraIRQ (unsigned long channel);

/*!
 * @brief    摄像头DMA传输开启
 *
 * @param    channel  : DMA通道
 *
 * @return   无
 *
 * @note     注意   在场中断中再次开启DMA传输
 *
 * @see      DMA_CameraIRQ(PIN_INT2_PRIORITY);
 *
 * @date     2020/4/8
 */
IFX_INLINE void DMA_CameraStart (unsigned long channel)
{
    if (Camera_Flag == 0)   //检测标志位是否清除   如果没有清除则不进行新的数据采集  避免覆盖未使用数据
    {

        /* DMA 设置传输目的地址  */
        IfxDma_setChannelDestinationAddress(&MODULE_DMA, channel,
                (void *) IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), Image_Data));

        /* 开启DMA传输  */
        IfxDma_enableChannelTransaction(&MODULE_DMA, channel);
    }
}

/*!
 * @brief    DMA传输停止
 *
 * @param    channel  : DMA通道
 *
 * @return   无
 *
 * @note     注意   在场中断中再次开启DMA传输
 *
 * @see      DMA_CameraStop(PIN_INT2_PRIORITY);
 *
 * @date     2020/4/8
 */
IFX_INLINE void DMA_CameraStop (unsigned long channel)
{
    /* 开启DMA传输 清除标志位 */
    IfxDma_disableChannelTransaction(&MODULE_DMA, channel);
    Camera_Flag = 0;
}

/*!
 * @brief    摄像头DMA传输中断处理函数
 *
 * @param    channel  : DMA通道
 *
 * @return   无
 *
 * @note     注意    一幅图需要进行两次DMA传输，因此会触发两次DMA中断
 *
 * @see      DMA_CameraIRQ(PIN_INT2_PRIORITY);
 *
 * @date     2020/4/8
 */
IFX_INLINE void DMA_CameraIRQ (unsigned long channel)
{

    /* DMA 摄像头 中断服务函数 */
    Camera_Flag++;
    if (Camera_Flag == 2)
    {
        /* 摄像头一帧数据传输结束 停止dma传输  在场中断中再次开启DMA传输 */
        IfxDma_disableChannelTransaction(&MODULE_DMA, channel);
    }
    else
    {
        /* 清理dma传输请求  */
        (IfxDma_Dma_getSrcPointer(&g_DmaCameraLinkedList.chn))->B.CLRR = 1;

        /* 设置DMA传输源地址 */
        IfxDma_setChannelDestinationAddress(&MODULE_DMA, channel,
                (void *) IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &Image_Data[60][0]));
    }

}

#endif /* 0_APPSW_TRICORE_APP_LQ_GPIO_H_ */
